substitutions:
  name: esphome-web-xxxxxx
  friendly_name: Amped-Esparagus
  task_stack_in_psram: "false" # important to disable this for non-S3 model

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2025.7.0
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_mode: dio

esp32:
  board: mhetesp32minikit
  flash_size: 8MB
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
      CONFIG_BT_ALLOCATION_FROM_SPIRAM_FIRST: "y"
      CONFIG_BT_BLE_DYNAMIC_ENV_MEMORY: "y"

      CONFIG_MBEDTLS_EXTERNAL_MEM_ALLOC: "y"
      CONFIG_MBEDTLS_SSL_PROTO_TLS1_3: "y"  # TLS1.3 support isn't enabled by default in IDF 5.1.5

# Enable logging
logger:
  level: DEBUG
  
wifi:
  ssid: !secret esphome_wifi_ssid
  password: !secret esphome_wifi_password
  ap:
    ssid: "$name Hotspot"
    password: !secret esphome_ap_password

captive_portal:

# Allow Over-The-Air updates
ota:
  platform: esphome
  password: !secret esphome_ota_password

### Optional if you want ethernet (then remove above wifi config)
#ethernet:
#  type: W5500
#  clk_pin: GPIO18
#  mosi_pin: GPIO23
#  miso_pin: GPIO19
#  cs_pin: GPIO05
#  interrupt_pin: GPIO35
#  reset_pin: GPIO14

# Enable Home Assistant API
api:

psram:
  speed: 80MHz

network:
  enable_ipv6: true

external_components:
  - source: github://c-MM/esphome-snapclient
    components: [ snapclient ]
    refresh: 0s

i2s_audio:
  i2s_lrclk_pin: GPIO25
  i2s_bclk_pin: GPIO26

### Snapclient component is a work in progress, not yet ready for production use
# More details:
# https://github.com/c-MM/esphome-snapclient/
# https://github.com/esphome/esphome/pull/8350
snapclient:
  hostname: 192.168.1.49   # at this time auto-discovery does not work, so you need to specify the server IP address
  port: 1704               # default port, no need to change unless you have changed it on the server side
  name: $friendly_name     # this is the name that will appear in the snapcast clients list
  i2s_dout_pin: GPIO22     # I2S data out pin
  webserver_port: 8080     # start webserver for snapclient controls

switch:
  # Enable USB-PD trigger chip. Will request 19V from the power supply, but might be limited by the power supply capabilities
  # When off, will use 5V from the USB port, which is enough to power the DAC and ESP32 with limited power
  - platform: gpio
    id: pd_enable
    pin: GPIO13
    restore_mode: ALWAYS_ON
    inverted: true
    name: "PD Power Enable"

### RGB light config
light:
  - platform: esp32_rmt_led_strip
    id: rgb_front_led
    name: "${friendly_name} LED"
    rgb_order: GRB
    pin: GPIO33
    num_leds: 8
    chipset: ws2812
    default_transition_length: 0s

### IR reader config. Add your own IR codes as needed
remote_receiver:
  pin: 
    number: GPIO39
    inverted: true
    mode:
      input: true
  dump: all

button:
  - platform: restart
    id: restart_btn
    name: "${friendly_name} REBOOT"

  - platform: gpio
    id: rotary_btn
    name: "${friendly_name} Rotary button"
    pin: GPIO34

sensor:
  - platform: rotary_encoder
    name: "Rotary Encoder"
    pin_a: GPIO27
    pin_b: GPIO33
    on_clockwise:
      - logger.log: "Rotary Turned Clockwise"
    on_anticlockwise:
      - logger.log: "Rotary Turned Anticlockwise"