substitutions:
  name: esphome-web-xxxxxx
  friendly_name: Amped-Esparagus
  task_stack_in_psram: "false" # important to disable this for non-S3 model

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2025.7.0
  name_add_mac_suffix: false
  platformio_options:
    board_build.flash_mode: dio

esp32:
  board: mhetesp32minikit
  flash_size: 8MB
  framework:
    type: esp-idf
    version: recommended
    sdkconfig_options:
      CONFIG_BT_ALLOCATION_FROM_SPIRAM_FIRST: "y"
      CONFIG_BT_BLE_DYNAMIC_ENV_MEMORY: "y"

      CONFIG_MBEDTLS_EXTERNAL_MEM_ALLOC: "y"
      CONFIG_MBEDTLS_SSL_PROTO_TLS1_3: "y"  # TLS1.3 support isn't enabled by default in IDF 5.1.5

# Enable logging
logger:
  level: DEBUG
  
wifi:
  ssid: !secret esphome_wifi_ssid
  password: !secret esphome_wifi_password
  ap:
    ssid: "$name Hotspot"
    password: !secret esphome_ap_password

captive_portal:

# Allow Over-The-Air updates
ota:
  platform: esphome
  password: !secret esphome_ota_password

### Optional if you want ethernet (then remove above wifi config)
#ethernet:
#  type: W5500
#  clk_pin: GPIO18
#  mosi_pin: GPIO23
#  miso_pin: GPIO19
#  cs_pin: GPIO05
#  interrupt_pin: GPIO35
#  reset_pin: GPIO14

# Enable Home Assistant API
api:

psram:
  speed: 80MHz

# network:
#   enable_ipv6: true

#external_components:
  # - source: github://c-MM/esphome-snapclient
  #   components: [ snapclient ]
  #   refresh: 0s

globals:
  - id: current_volume
    type: float

i2s_audio:
  i2s_lrclk_pin: GPIO25
  i2s_bclk_pin: GPIO26

### Snapclient component is a work in progress, not yet ready for production use
# Will be updated, as soon as snapclient component is ready
# snapclient:
#   hostname: 192.168.1.49
#   port: 1704
#   name: $friendly_name
#   audio_dac: tas5805m_dac
#   i2s_dout_pin: GPIO16
#   webserver_port: 8080  # start webserver for equalizer

speaker:
  - platform: i2s_audio
    id: speaker_id
    dac_type: external
    i2s_dout_pin: GPIO22
    channel: stereo
    sample_rate: 48000
    timeout: never

  - platform: mixer
    id: mixer_speaker_id
    task_stack_in_psram: ${task_stack_in_psram}
    output_speaker: speaker_id
    source_speakers:
      - id: announcement_spk_mixer_input
        timeout: never
      - id: media_spk_mixer_input
        timeout: never

  - platform: resampler
    id: media_spk_resampling_input
    task_stack_in_psram: ${task_stack_in_psram}
    output_speaker: media_spk_mixer_input

  - platform: resampler
    id: announcement_spk_resampling_input
    task_stack_in_psram: ${task_stack_in_psram}
    output_speaker: announcement_spk_mixer_input

media_player:
  - platform: speaker
    name: Amped Mediaplayer
    id: amped_mediaplayer
    task_stack_in_psram: ${task_stack_in_psram}
    volume_increment: 5%
    volume_initial: 45%
    media_pipeline:
      speaker: media_spk_resampling_input
      num_channels: 2
    announcement_pipeline:
      speaker: announcement_spk_resampling_input
      num_channels: 1

    on_announcement:
      - light.turn_on:
          id: rgb_front_led
          blue: 100%
          red: 0%
          green: 100%
          brightness: 50%
          
      - mixer_speaker.apply_ducking:
            id: media_spk_mixer_input
            decibel_reduction: 40
            duration: 0.0s
      - wait_until:
            media_player.is_announcing:

      - wait_until:
          not:
            media_player.is_announcing:
      - mixer_speaker.apply_ducking:
            id: media_spk_mixer_input
            decibel_reduction: 0
            duration: 1.0s

      - light.turn_off:
          id: rgb_front_led

switch:
  # Enable USB-PD trigger chip. Will request 19V from the power supply, but might be limited by the power supply capabilities
  # When off, will use 5V from the USB port, which is enough to power the DAC and ESP32 with limited power
  - platform: gpio
    id: pd_enable
    pin: GPIO13
    restore_mode: ALWAYS_ON
    inverted: true
    name: "PD Power Enable"

### RGB light config
light:
  - platform: esp32_rmt_led_strip
    id: rgb_front_led
    name: "${friendly_name} LED"
    rgb_order: GRB
    pin: GPIO33
    num_leds: 8
    chipset: ws2812
    default_transition_length: 0s

### IR reader config. Add your own IR codes as needed
remote_receiver:
  pin: 
    number: GPIO39
    inverted: true
    mode:
      input: true
  dump: all

button:
  - platform: restart
    id: restart_btn
    name: "${friendly_name} REBOOT"

  - platform: gpio
    id: rotary_btn
    name: "${friendly_name} Rotary button"
    pin: GPIO34

sensor:
  - platform: rotary_encoder
    name: "Rotary Encoder"
    pin_a: GPIO27
    pin_b: GPIO33
    on_clockwise:
      - logger.log: "Rotary Turned Clockwise"
    on_anticlockwise:
      - logger.log: "Rotary Turned Anticlockwise"